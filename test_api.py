#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –±–ª–æ–≥-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
"""

import requests
import json
import time

# BASE_URL = "http://localhost:8000"
BASE_URL = "https://msa-zfd1.onrender.com"

def test_api():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Blog Platform API")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ endpoint
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ endpoint...")
    try:
        response = requests.get(f"{BASE_URL}/")
        print(f"‚úÖ GET / - Status: {response.status_code}")
        print(f"   Response: {response.json()['message']}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    user_data = {
        "email": "testuser@example.com",
        "username": "testuser",
        "password": "password",
        "bio": "testbio"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/users", json=user_data)
        if response.status_code == 201:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            user_info = response.json()['data']['user']
            print(f"   User ID: {user_info['id']}")
            print(f"   Username: {user_info['username']}")
        elif response.status_code == 409:
            print("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code}")
            print(f"   Response: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 3. –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3. –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    login_data = {
        "email": "testuser@example.com",
        "password": "password"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/api/users/login", json=login_data)
        if response.status_code == 200:
            print("‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω")
            login_info = response.json()['data']
            token = login_info['access_token']
            print(f"   Token: {token[:50]}...")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            headers = {"Authorization": f"Bearer {token}"}
            
            # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...")
            try:
                response = requests.get(f"{BASE_URL}/api/user", headers=headers)
                if response.status_code == 200:
                    print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ–ª—É—á–µ–Ω–∞")
                    user_info = response.json()['data']['user']
                    print(f"   Username: {user_info['username']}")
                    print(f"   Email: {user_info['email']}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.status_code}")
                    print(f"   Response: {response.text}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
            # 5. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
            print("\n5. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏...")
            article_data = {
                "title": "–ú–æ—è –ø–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è",
                "description": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏",
                "body": "–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º...",
                "tag_list": ["–±–ª–æ–≥", "python", "fastapi"]
            }
            
            try:
                response = requests.post(f"{BASE_URL}/api/articles", json=article_data, headers=headers)
                if response.status_code == 201:
                    print("‚úÖ –°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                    article_info = response.json()['data']['article']
                    print(f"   Article ID: {article_info['id']}")
                    print(f"   Title: {article_info['title']}")
                    print(f"   Slug: {article_info['slug']}")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º slug –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                    slug = article_info['slug']
                    
                    # 6. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π
                    print("\n6. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π...")
                    try:
                        response = requests.get(f"{BASE_URL}/api/articles")
                        if response.status_code == 200:
                            print("‚úÖ –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π –ø–æ–ª—É—á–µ–Ω")
                            articles_info = response.json()['data']
                            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π: {articles_info['count']}")
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π: {response.status_code}")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                    
                    # 7. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –ø–æ slug
                    print(f"\n7. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –ø–æ slug: {slug}")
                    try:
                        response = requests.get(f"{BASE_URL}/api/articles/{slug}")
                        if response.status_code == 200:
                            print("‚úÖ –°—Ç–∞—Ç—å—è –ø–æ–ª—É—á–µ–Ω–∞ –ø–æ slug")
                            article_info = response.json()['data']['article']
                            print(f"   Title: {article_info['title']}")
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏: {response.status_code}")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                    
                    # 8. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
                    print(f"\n8. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏: {slug}")
                    update_data = {
                        "title": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è",
                        "description": "–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
                    }
                    try:
                        response = requests.put(f"{BASE_URL}/api/articles/{slug}", json=update_data, headers=headers)
                        if response.status_code == 200:
                            print("‚úÖ –°—Ç–∞—Ç—å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
                            article_info = response.json()['data']['article']
                            print(f"   New Title: {article_info['title']}")
                            # –û–±–Ω–æ–≤–ª—è–µ–º slug –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏
                            slug = article_info['slug']
                            print(f"   New Slug: {slug}")
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏: {response.status_code}")
                            print(f"   Response: {response.text}")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                    
                    # 9. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ —Å—Ç–∞—Ç—å–µ
                    print(f"\n9. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ —Å—Ç–∞—Ç—å–µ: {slug}")
                    comment_data = {
                        "body": "–û—Ç–ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç—å—è! –û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è."
                    }
                    try:
                        response = requests.post(f"{BASE_URL}/api/articles/{slug}/comments", json=comment_data, headers=headers)
                        if response.status_code == 200:
                            print("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω")
                            comment_info = response.json()['data']['comment']
                            comment_id = comment_info['id']
                            print(f"   Comment ID: {comment_id}")
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {response.status_code}")
                            print(f"   Response: {response.text}")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                    
                    # 10. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ —Å—Ç–∞—Ç—å–µ
                    print(f"\n10. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ —Å—Ç–∞—Ç—å–µ: {slug}")
                    try:
                        response = requests.get(f"{BASE_URL}/api/articles/{slug}/comments")
                        if response.status_code == 200:
                            print("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã")
                            comments_info = response.json()['data']
                            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comments_info['count']}")
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {response.status_code}")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                    
                    # 11. –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                    if 'comment_id' in locals():
                        print(f"\n11. –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {comment_id}")
                        try:
                            response = requests.delete(f"{BASE_URL}/api/articles/{slug}/comments/{comment_id}", headers=headers)
                            if response.status_code == 200:
                                print("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É–¥–∞–ª–µ–Ω")
                            else:
                                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {response.status_code}")
                                print(f"   Response: {response.text}")
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                    
                    # 12. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
                    print(f"\n12. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏: {slug}")
                    try:
                        response = requests.delete(f"{BASE_URL}/api/articles/{slug}", headers=headers)
                        if response.status_code == 200:
                            print("‚úÖ –°—Ç–∞—Ç—å—è —É–¥–∞–ª–µ–Ω–∞")
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏: {response.status_code}")
                            print(f"   Response: {response.text}")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                        
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏: {response.status_code}")
                    print(f"   Response: {response.text}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
            print(f"   Response: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_api()
